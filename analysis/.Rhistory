library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
# double check: all sample notation strings are 10 characters long
# by_species_df$samp_len <- str_count(by_species_df$sample)
# unique(by_species_df$samp_len)
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct??
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
#lets see if we can match oyster data up with environmental data
#---------------------------------------------------------------------
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[\\--\\]")
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[\\-\\-]")
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[\\-\\-]")
library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
#just messing around with taxa
# by_species_df$samp_len <- str_count(by_species_df$sample)
# unique(by_species_df$samp_len)
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct??
#------------------------------------------------------------------------------
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 8)
library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
#just messing around with taxa
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct??
#------------------------------------------------------------------------------
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 9)
ostrea_env <- inner_join(ostrea, events)
View(ostrea_env)
plot(ostrea_env$nReads, ostrea_env$pH_new)
plot(ostrea_env$Temperature, ostrea_env$nReads)
#------------------------------------------------------------------------------
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
ostrea$nReads <- log(ostrea$nReads)
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
#just messing around with taxa
#------------------------------------------------------------------------------
#OYSTERS filter
oysters <- ASV_tax %>%
#filter(genus %in% c('Ostrea','Crassostrea'))
filter(genus %in% c('Ostrea'))
oysters_str <- ASV_tax %>%
filter(str_detect(genus, 'Ostrea')) #these filters do the same thing
# balanus filter
balanus <- ASV_tax %>%
filter(str_detect(genus, 'Balanus'))
# STAR FEEESH
starfeesh <- ASV_tax %>%
filter(str_detect(family, "Asteriidae"))
# how bout octopus
salmon <- ASV_tax %>%
filter(str_detect(family, "Salmonidae"))
# geoduck
geoduck <- ASV_tax %>%
filter(str_detect(family, 	"Hiatellidae"))
# LL filter
LL_oysters <- oysters %>%
filter(str_detect(sample, "LL"))
#Sample test filter
by_sample_test <- ASV_tax %>%
filter(str_detect(sample, "LL_201703"))
#taxonomy no.na
tax_nona <- taxonomy_table[!is.na(taxonomy_table$species), ]
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct??
#------------------------------------------------------------------------------
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
ostrea$nReads <- log(ostrea$nReads)
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 9)
ostrea_env <- inner_join(ostrea, events)
plot(ostrea_env$Temperature, ostrea_env$nReads)
plot(ostrea_env$pH_new, ostrea_env$nReads)
plot(ostrea_env$Season, ostrea_env$nReads)
?barplot
barplot(ostrea_env$Season, ostrea_env$nReads)
plot(ostrea_env$mean.DIC, ostrea_env$nReads)
plot(ostrea_env$Temperature, ostrea_env$nReads)
plot(ostrea_env$pH_new, ostrea_env$nReads)
plot(ostrea_env$mean.DIC, ostrea_env$nReads)
plot(ostrea_env$Omega.aragonite, ostrea_env$nReads)
littorina <- by_site_species %>%
filter(species %in% c('Littorina plena'))
littorina$nReads <- log(littorina$nReads)
littorina_env <-inner_join(littorina, events)
plot(littorina_env$Temperature, littorina_env$nReads)
plot(littorina_env$pH_new, littorina_env$nReads)
barplot(littorina$env$nReads)
barplot(littorina_env$nReads)
View(littorina)
View(littorina_env)
LL_littorina <- littorina_env %>%
filter(str_detect(sample, "LL"))
View(littorina_env)
View(LL_littorina)
barplot(LL_littorina$nReads)
library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
#just messing around with taxa
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct?
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
ostrea$nReads <- log(ostrea$nReads)
littorina <- by_site_species %>%
filter(species %in% c('Littorina plena'))
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 9)
littorina_env <-inner_join(littorina, events)
plot(littorina_env$Temperature, littorina_env$nReads)
plot(littorina_env$pH_new, littorina_env$nReads)
LL_littorina <- littorina_env %>%
filter(str_detect(sample, "LL"))
barplot(LL_littorina$nReads)
?barplot
barplot(LL_littorina$nReads, names.arg =sample)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample)
?barplot
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
TR_littorina <- littorina_env%>%
filter(str_detect(sample, "TR"))
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=2)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=2)
LK_littorina <- littorina_env %>%
filter(str_detect(sample, "LK"))
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=2)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=2)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=3)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=1)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=1)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=1)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=1)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=1)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=1)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=1)
LL_littorina <- littorina_env %>%
filter(str_detect(sample, "LL"))
TR_littorina <- littorina_env %>%
filter(str_detect(sample, "TR"))
LK_littorina <- littorina_env %>%
filter(str_detect(sample, "LK"))
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=1)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=1)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=1)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=2)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=2)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
plot(littorina_env$Temperature, littorina_env$nReads)
plot(littorina_env$pH_new, littorina_env$nReads)
# low resolution time series, are these even useful?
jpeg("./figures/LL_littorina.jpg", width = 350, height = "350")
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
dev.off()
# low resolution time series, are these even useful?
jpeg("./figures/LL_littorina.jpg", width = 350, height = 350)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
dev.off()
# low resolution time series, are these even useful?
jpeg("./figures/LL_littorina.jpg", width = 350, height = 350)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
dev.off()
# low resolution time series, are these even useful?
jpeg("./figures/LL_littorina.jpg", width = 500, height = 500)
barplot(LL_littorina$nReads, names.arg = LL_littorina$sample, las=2)
dev.off()
jpeg("./figures/TR_littorina.jpg", width = 500, height = 500)
barplot(TR_littorina$nReads, names.arg = TR_littorina$sample, las=2)
dev.off()
jpeg("./figures/LK_littorina.jpg", width = 500, height = 500)
barplot(LK_littorina$nReads, names.arg = LK_littorina$sample, las=2)
dev.off()
# lets try some scatter plots log(nReads) vs environmental variables
plot(ostrea_env$Temperature, ostrea_env$nReads)
plot(ostrea_env$pH_new, ostrea_env$nReads)
plot(ostrea_env$mean.DIC, ostrea_env$nReads)
pwd
cd
library('here')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
#saving useful CSVs
#---------------------------------------------------------------------
write_csv(by_site_species, "./asv-output/by.site.species.csv")
write_csv(by_species, "./asv-output/by.species.csv")
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
write_csv(by_species, "./asv-output/by.species.csv")
#saving useful CSVs
#---------------------------------------------------------------------
write_csv(by_site_species, "./asv-output/by.site.species.csv")
write_csv(by_species_df, "./asv-output/by.species.csv")
write_csv(littorina_env, "./asv-output/littorina.env.example.csv")
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads)
library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
#just messing around with taxa
#------------------------------------------------------------------------------
#OYSTERS filter
oysters <- ASV_tax %>%
#filter(genus %in% c('Ostrea','Crassostrea'))
filter(genus %in% c('Ostrea'))
oysters_str <- ASV_tax %>%
filter(str_detect(genus, 'Ostrea')) #these filters do the same thing
# balanus filter
balanus <- ASV_tax %>%
filter(str_detect(genus, 'Balanus'))
# STAR FEEESH
starfeesh <- ASV_tax %>%
filter(str_detect(family, "Asteriidae"))
# how bout octopus
salmon <- ASV_tax %>%
filter(str_detect(family, "Salmonidae"))
# geoduck
geoduck <- ASV_tax %>%
filter(str_detect(family, 	"Hiatellidae"))
# LL filter
LL_oysters <- oysters %>%
filter(str_detect(sample, "LL"))
#Sample test filter
by_sample_test <- ASV_tax %>%
filter(str_detect(sample, "LL_201703"))
#taxonomy no.na
tax_nona <- taxonomy_table[!is.na(taxonomy_table$species), ]
#------------------------------------------------------------------------------
# double check: all sample notation strings are 10 characters long
# by_species_df$samp_len <- str_count(by_species_df$sample)
# unique(by_species_df$samp_len)
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct??
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 9)
# join environmental/oceanographic variables with nReads of ostrea
ostrea_env <- inner_join(ostrea, events)
# lets try some scatter plots log(nReads) vs environmental variables
plot(ostrea_env$Temperature, ostrea_env$nReads)
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads)
dev.off()
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 9)
library('here')
library('dplyr')
library('stringr')
library('tidyverse')
# load Rarmon's data
ASV_table <- read.csv(here('asv-output','ASV_table_all_together.csv'))
taxonomy_table <- read.csv(here('asv-output','all.taxonomy.20190130.csv'))
# load in the sampling events, these could be useful for combining replicates
events <- read.csv(here('asv-output','clusters.of.events.csv'))
# NA's in ASV_table hash?
sum(is.na(ASV_table$Hash))
sum(is.na(taxonomy_table$Hash))
# merge ASV table and taxonomy table on hash column
ASV_tax <- inner_join(ASV_table, taxonomy_table)
unique(ASV_tax$sample)
#just messing around with taxa
#------------------------------------------------------------------------------
#OYSTERS filter
oysters <- ASV_tax %>%
#filter(genus %in% c('Ostrea','Crassostrea'))
filter(genus %in% c('Ostrea'))
oysters_str <- ASV_tax %>%
filter(str_detect(genus, 'Ostrea')) #these filters do the same thing
# balanus filter
balanus <- ASV_tax %>%
filter(str_detect(genus, 'Balanus'))
# STAR FEEESH
starfeesh <- ASV_tax %>%
filter(str_detect(family, "Asteriidae"))
# how bout octopus
salmon <- ASV_tax %>%
filter(str_detect(family, "Salmonidae"))
# geoduck
geoduck <- ASV_tax %>%
filter(str_detect(family, 	"Hiatellidae"))
# LL filter
LL_oysters <- oysters %>%
filter(str_detect(sample, "LL"))
#Sample test filter
by_sample_test <- ASV_tax %>%
filter(str_detect(sample, "LL_201703"))
#taxonomy no.na
tax_nona <- taxonomy_table[!is.na(taxonomy_table$species), ]
#------------------------------------------------------------------------------
# double check: all sample notation strings are 10 characters long
# by_species_df$samp_len <- str_count(by_species_df$sample)
# unique(by_species_df$samp_len)
# ok lets try to summarize by summing all reads within a taxon and a site/sample.
by_species_df <- ASV_tax %>%
group_by(sample, species) %>% # group the columns you want to "leave alone"
summarize(nReads=sum(nReads)) %>% #sum nReads
separate(col=sample, into=c('sample','tech'), sep='[.]') %>%
separate(col=sample, into=c("sample", "bio"), sep = 9)
by_site_species <- by_species_df %>%
group_by(sample, species) %>%
summarize(nReads=sum(nReads)) #sum nReads by species+sample - is this correct??
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
ostrea <- by_site_species %>%
filter(species %in% c('Ostrea lurida'))
# log transform to make data exploration easier?
ostrea$nReads <- log(ostrea$nReads)
littorina <- by_site_species %>%
filter(species %in% c('Littorina plena'))
#lets see if we can match oyster data up with environmental data
#------------------------------------------------------------------------------
events$event <- str_remove(events$event, "[-]") # find a better way to do this please
events$event <- str_remove(events$event, "[-]")
events <- events %>%
separate(col=event, into=c("sample", "foo"), sep = 9)
# join environmental/oceanographic variables with nReads of ostrea
ostrea_env <- inner_join(ostrea, events)
# lets try some scatter plots log(nReads) vs environmental variables
plot(ostrea_env$Temperature, ostrea_env$nReads)
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads)
dev.off()
?plot
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, xlab="pH",ylab="nReads over all replicates")
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, xlab="pH",ylab="nReads over all replicates")
dev.off()
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="Olympia Oyster Reads vs. pH" xlab="pH",ylab="nReads over all replicates")
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="Olympia Oyster Reads vs. pH" xlab="pH",ylab="nReads over all replicates")
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="Olympia Oyster Reads vs. pH", xlab="pH",ylab="nReads over all replicates")
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="Olympia Oyster Reads vs. pH", xlab="pH",ylab="nReads over all replicates")
dev.off()
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="log(Olympia Oyster Reads) vs. pH", xlab="pH",ylab="nReads over all replicates")
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="log(Olympia Oyster Reads) vs. pH", xlab="pH",ylab="nReads over all replicates")
dev.off()
jpeg("./figures/ostrea_pH.jpg", width = 500, height = 500)
plot(ostrea_env$pH_new, ostrea_env$nReads, main="log(Olympia Oyster Reads) vs. pH", xlab="pH",ylab="nReads over all replicates")
.libPaths()
knitr::opts_chunk$set(echo = TRUE)
library('dada2')
library(dada2); packageVersion("dada2")
